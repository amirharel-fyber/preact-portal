{"version":3,"sources":["../src/preact-portal.js"],"names":["Portal","componentDidUpdate","props","i","this","setTimeout","renderLayer","componentDidMount","isMounted","bind","componentWillUnmount","remote","parentNode","removeChild","findNode","node","getDocument","querySelector","document","show","arguments","length","undefined","into","intoPointer","render","h","PortalProxy","context","children","Component","getChildContext","_ref"],"mappings":"+rDAQqBA,EAAAA,SAAAA,2FACpBC,mBAAAA,SAAmBC,OACb,GAAIC,KAAKD,MACTA,EAAMC,KAAKC,KAAKF,MAAMC,SAClBE,YAAWD,KAAKE,0BAK1BC,kBAAAA,gBACMC,WAAU,OACVF,YAAcF,KAAKE,YAAYG,KAAKL,WACpCE,2BAGNI,qBAAAA,gBACMJ,aAAY,QACZE,WAAU,EACXJ,KAAKO,QAAQP,KAAKO,OAAOC,WAAWC,YAAYT,KAAKO,qBAG1DG,SAAAA,SAASC,SACa,gBAAPA,GAAkBX,KAAKY,cAAcC,cAAcF,GAAQA,eAG1EC,YAAAA,iBACKZ,MAAKF,MAAMc,YACPZ,KAAKF,MAAMc,cAEZE,sBAGRZ,YAAAA,cAAYa,KAAWC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,KAAAA,UAAA,EACjBhB,MAAKI,YAGNJ,KAAKF,MAAMqB,OAAOnB,KAAKoB,mBACrBA,YAAcpB,KAAKF,MAAMqB,KAC1BnB,KAAKmB,MAAQnB,KAAKO,cAChBA,OAASc,EAAAA,OAAOC,EAAAA,EAACC,EAAD,MAAiBvB,KAAKmB,KAAMnB,KAAKO,cAElDY,KAAOnB,KAAKU,SAASV,KAAKF,MAAMqB,YAGjCZ,OAASc,EAAAA,OACbC,EAAAA,KAAaE,QAASxB,KAAKwB,YAChBxB,KAAKF,MAAM2B,UAAY,MAEhCzB,KAAKmB,KAAMnB,KAAKO,sBAGpBc,OAAAA,iBACQ,UApD2BK,EAAAA,WA2D9BH,EAAAA,SAAAA,2FACLI,gBAAAA,iBACQ3B,MAAKF,MAAM0B,qBAEnBH,OAAAA,SAAAA,MAASI,GAAYG,EAAZH,eACDA,IAAYA,EAAS,IAAM,SALVC,EAAAA","file":"preact-portal.min.js","sourcesContent":["import { h, Component, render } from 'preact';\n\n/** Redirect rendering of descendants into the given CSS selector.\n *  @example\n *    <Portal into=\"body\">\n *      <div>I am rendered into document.body</div>\n *    </Portal>\n */\nexport default class Portal extends Component {\n\tcomponentDidUpdate(props) {\n\t\tfor (let i in props) {\n\t\t\tif (props[i]!==this.props[i]) {\n\t\t\t\treturn setTimeout(this.renderLayer);\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isMounted=true;\n\t\tthis.renderLayer = this.renderLayer.bind(this);\n\t\tthis.renderLayer();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.renderLayer(false);\n\t\tthis.isMounted=false;\n\t\tif (this.remote) this.remote.parentNode.removeChild(this.remote);\n\t}\n\n\tfindNode(node) {\n\t\treturn typeof node==='string' ? this.getDocument().querySelector(node) : node;\n\t}\n\t\n\tgetDocument() {\n\t\tif (this.props.getDocument) {\n\t\t\treturn this.props.getDocument();\n\t\t}\n\t\treturn document;\n\t}\n\n\trenderLayer(show=true) {\n\t\tif (!this.isMounted) return;\n\n\t\t// clean up old node if moving bases:\n\t\tif (this.props.into!==this.intoPointer) {\n\t\t\tthis.intoPointer = this.props.into;\n\t\t\tif (this.into && this.remote) {\n\t\t\t\tthis.remote = render(<PortalProxy />, this.into, this.remote);\n\t\t\t}\n\t\t\tthis.into = this.findNode(this.props.into);\n\t\t}\n\n\t\tthis.remote = render((\n\t\t\t<PortalProxy context={this.context}>\n\t\t\t\t{ show && this.props.children || null }\n\t\t\t</PortalProxy>\n\t\t), this.into, this.remote);\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\n\n// high-order component that renders its first child if it exists.\n// used as a conditional rendering proxy.\nclass PortalProxy extends Component {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender({ children }) {\n\t\treturn children && children[0] || null;\n\t}\n}\n"]}
